#!/usr/bin/env python
# Used to import/update one or more ADIF logs into a single log.
# DE SA6MWA
# based on ADIF.PY by OK4BX http://web.bxhome.org
import sys, os
import re
import datetime
import time
import glob
ADIF_REC_RE = re.compile(r'<(.*?):(\d+).*?>([^<\t\f\v]+)')

def parse(fn):
  raw = re.split('<eor>|<eoh>(?i)', open(fn).read() )
  logbook =[]
  for record in raw[1:-1]:
    qso = {}
    tags = ADIF_REC_RE.findall(record)
    for tag in tags:
      qso[tag[0].lower()] = tag[2][:int(tag[1])]
    logbook.append(qso)    
  return logbook

def sortlogbook(data):
  for i in range(len(data)):
    # convert all entries into lower case and ensure qso_date and time_on exists
    data[i] = {k.lower(): v for k, v in data[i].items()}
    if 'qso_date' not in data[i]:
      data[i]['qso_date'] = ""
    if 'time_on' not in data[i]:
      data[i]['time_on'] = ""
  return sorted(data, key = lambda x: x['qso_date'] + x['time_on'])

def save(fn, data):
  fh=open(fn,'w')
  fh.write('Log: %s\nGenerated by SA6MWA import.py based on\nADIF.PY by OK4BX\nhttp://web.bxhome.org\n<EOH>\n' % sys.argv[1])
  for qso in sortlogbook(data):
    for key in sorted(qso):
      value = qso[key]
      fh.write('<%s:%i>%s ' % (key.upper(), len(value), value))
    fh.write('<EOR>\n')
  fh.close()

#def conv_datetime(adi_date, adi_time):
#    return datetime.datetime.strptime(adi_date+adi_time.ljust(6,"0"), "%Y%m%d%H%M%S")

def main():
  if len(sys.argv) < 3:
    print "usage: %s destinationlog.adif sourcelog1.adif [sourcelog2.adif...]" % sys.argv[0]
    sys.exit(1)
  destinationlog = sys.argv[1]
  logbook = list()
  if os.path.exists(destinationlog):
    if not os.path.isfile(destinationlog):
      print "error: %s is not a file!" % destinationlog
      sys.exit(1)
    logbook = parse(destinationlog)
  logbook_original_length = len(logbook)
  adifs = sys.argv[2:]
  for f in adifs:
    flogbook = parse(f)
    for qso in flogbook:
      if qso not in logbook:
        logbook.append(qso)
  if len(logbook) > 0 and len(logbook) > logbook_original_length:
    save(destinationlog, logbook)
    print "Saved " + destinationlog
  else:
    print "Nothing to add to %s." % destinationlog
if __name__ == '__main__':
  main()
